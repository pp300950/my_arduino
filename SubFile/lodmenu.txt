const int BTN_NEXT = 2;
const int BTN_SELECT = 3;
const int BTN_OK = 4;

int menuIndex = 0;
int daySetting = 0;    // 0=‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô, 1=‡∏à-‡∏®, 2=‡∏™-‡∏≠‡∏≤
int hourSetting = 8;
int minuteSetting = 0;

void setup() {
  Serial.begin(9600);
  pinMode(BTN_NEXT, INPUT_PULLUP);
  pinMode(BTN_SELECT, INPUT_PULLUP);
  pinMode(BTN_OK, INPUT_PULLUP);
  showMenu();
}

void loop() {
  if (digitalRead(BTN_NEXT) == LOW) {
    menuIndex = (menuIndex + 1) % 4; // 4 ‡πÄ‡∏°‡∏ô‡∏π
    showMenu();
    delay(300);
  }

  if (digitalRead(BTN_SELECT) == LOW) {
    switch (menuIndex) {
      case 0: daySetting = (daySetting + 1) % 3; break;
      case 1: hourSetting = (hourSetting + 1) % 24; break;
      case 2: minuteSetting = (minuteSetting + 1) % 60; break;
    }
    showMenu();
    delay(300);
  }

  if (digitalRead(BTN_OK) == LOW) {
    if (menuIndex == 3) {
      Serial.println("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");
      Serial.print("üïí ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤: ");
      Serial.print(hourSetting);
      Serial.print(":");
      Serial.println(minuteSetting < 10 ? "0" + String(minuteSetting) : String(minuteSetting));
      Serial.print("üìÜ ‡∏ß‡∏±‡∏ô: ");
      if (daySetting == 0) Serial.println("‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô");
      else if (daySetting == 1) Serial.println("‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏®‡∏∏‡∏Å‡∏£‡πå");
      else Serial.println("‡πÄ‡∏™‡∏≤‡∏£‡πå - ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå");
    }
    delay(300);
  }
}

void showMenu() {
  Serial.print("üìå ‡πÄ‡∏°‡∏ô‡∏π: ");
  switch (menuIndex) {
    case 0:
      Serial.print("‡∏ß‡∏±‡∏ô: ");
      if (daySetting == 0) Serial.println("‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô");
      else if (daySetting == 1) Serial.println("‡∏à-‡∏®");
      else Serial.println("‡∏™-‡∏≠‡∏≤");
      break;
    case 1:
      Serial.print("‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á: ");
      Serial.println(hourSetting);
      break;
    case 2:
      Serial.print("‡∏ï‡∏±‡πâ‡∏á‡∏ô‡∏≤‡∏ó‡∏µ: ");
      Serial.println(minuteSetting);
      break;
    case 3:
      Serial.println("‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤");
      break;
  }
}
